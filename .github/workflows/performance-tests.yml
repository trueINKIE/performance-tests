name: Performance Tests

on:
  workflow_dispatch:
    inputs:
      SCENARIO:
        type: 'choice'
        default: './scenarios/grpc/gateway/new_user_get_accounts/v1.0.conf'
        options:
          # grpc-сценарии
          - ./scenarios/grpc/gateway/existing_user_get_documents/v1.0.conf
          - ./scenarios/grpc/gateway/existing_user_get_operations/v1.0.conf
          - ./scenarios/grpc/gateway/existing_user_issue_virtual_card/v1.0.conf
          - ./scenarios/grpc/gateway/existing_user_make_purchase_operation/v1.0.conf
          - ./scenarios/grpc/gateway/new_user_get_accounts/v1.0.conf
          - ./scenarios/grpc/gateway/new_user_get_documents/v1.0.conf
          - ./scenarios/grpc/gateway/new_user_issue_physical_card/v1.0.conf
          - ./scenarios/grpc/gateway/new_user_make_top_up_operation/v1.0.conf
          # http-сценарии
          - ./scenarios/http/gateway/existing_user_get_documents/v1.0.conf
          - ./scenarios/http/gateway/existing_user_get_operations/v1.0.conf
          - ./scenarios/http/gateway/existing_user_issue_virtual_card/v1.0.conf
          - ./scenarios/http/gateway/existing_user_make_purchase_operation/v1.0.conf
          - ./scenarios/http/gateway/new_user_get_accounts/v1.0.conf
          - ./scenarios/http/gateway/new_user_get_documents/v1.0.conf
          - ./scenarios/http/gateway/new_user_issue_physical_card/v1.0.conf
          - ./scenarios/http/gateway/new_user_make_top_up_operation/v1.0.conf
        required: true
        description: 'Locust config file'

jobs:
  run-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Clone test services
        run: git clone https://github.com/Nikita-Filonov/performance-qa-engineer-course.git

      - name: Build base Docker image
        run: docker build -f Dockerfile.base -t base-service .
        working-directory: performance-qa-engineer-course

      - name: Start test services
        run: docker compose -f docker-compose.ci.yaml up -d --build
        working-directory: performance-qa-engineer-course

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create report directory
        run: mkdir -p ./reports/${{ github.run_id }}

      - name: Run load tests and generate HTML report
        run: locust --config=${{ github.event.inputs.SCENARIO }} --html=./reports/${{ github.run_id }}/index.html

      - name: Upload test report artifact
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: reports/
          retention-days: 1

      - name: Stop test services
        if: always()
        run: docker compose -f docker-compose.ci.yaml down -v
        working-directory: performance-qa-engineer-course

  publish-report:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: run-tests
    if: always()

    steps:
      - name: Download test report artifact
        uses: actions/download-artifact@v4
        with:
          name: reports
          path: ./

      - name: Verify downloaded files
        run: |
          echo "Содержимое папки reports:"
          ls -la ./reports/
          echo "Содержимое подпапки ${{ github.run_id }}:"
          ls -la ./reports/${{ github.run_id }}/

      - name: Deploy HTML report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          keep_files: true
          force_orphan: true
          publish_dir: ./reports/${{ github.run_id }}